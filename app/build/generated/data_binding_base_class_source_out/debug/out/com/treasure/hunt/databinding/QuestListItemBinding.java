// Generated by view binder compiler. Do not edit!
package com.treasure.hunt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.treasure.hunt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class QuestListItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView estimatedValueTextView;

  @NonNull
  public final View itemDividerLine;

  @NonNull
  public final TextView questLengthTextView;

  @NonNull
  public final ImageView treasureIconImageView;

  @NonNull
  public final TextView treasureNameTextView;

  private QuestListItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView estimatedValueTextView, @NonNull View itemDividerLine,
      @NonNull TextView questLengthTextView, @NonNull ImageView treasureIconImageView,
      @NonNull TextView treasureNameTextView) {
    this.rootView = rootView;
    this.estimatedValueTextView = estimatedValueTextView;
    this.itemDividerLine = itemDividerLine;
    this.questLengthTextView = questLengthTextView;
    this.treasureIconImageView = treasureIconImageView;
    this.treasureNameTextView = treasureNameTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static QuestListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static QuestListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.quest_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static QuestListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.estimatedValueTextView;
      TextView estimatedValueTextView = ViewBindings.findChildViewById(rootView, id);
      if (estimatedValueTextView == null) {
        break missingId;
      }

      id = R.id.itemDividerLine;
      View itemDividerLine = ViewBindings.findChildViewById(rootView, id);
      if (itemDividerLine == null) {
        break missingId;
      }

      id = R.id.questLengthTextView;
      TextView questLengthTextView = ViewBindings.findChildViewById(rootView, id);
      if (questLengthTextView == null) {
        break missingId;
      }

      id = R.id.treasureIconImageView;
      ImageView treasureIconImageView = ViewBindings.findChildViewById(rootView, id);
      if (treasureIconImageView == null) {
        break missingId;
      }

      id = R.id.treasureNameTextView;
      TextView treasureNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (treasureNameTextView == null) {
        break missingId;
      }

      return new QuestListItemBinding((ConstraintLayout) rootView, estimatedValueTextView,
          itemDividerLine, questLengthTextView, treasureIconImageView, treasureNameTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
